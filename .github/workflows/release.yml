# GitHub Actions workflow for automated releases
# This workflow uses Release Please to automate changelog generation and releases

name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release
        with:
          # The default release type for Python projects
          release-type: python
          # Package name (should match your package name)
          package-name: tau2
          # Path to version file (pyproject.toml for Python)
          version-file: pyproject.toml
          # Include changelog in release notes
          include-v-in-tag: true
          # Custom changelog types for better categorization
          changelog-types: |
            [
              {"type":"feat","section":"Added","hidden":false},
              {"type":"fix","section":"Fixed","hidden":false},
              {"type":"perf","section":"Performance","hidden":false},
              {"type":"revert","section":"Reverted","hidden":false},
              {"type":"docs","section":"Documentation","hidden":false},
              {"type":"style","section":"Styling","hidden":true},
              {"type":"chore","section":"Maintenance","hidden":true},
              {"type":"refactor","section":"Refactoring","hidden":true},
              {"type":"test","section":"Testing","hidden":true},
              {"type":"build","section":"Build","hidden":true},
              {"type":"ci","section":"CI/CD","hidden":true}
            ]

      # Optional: Build and publish to PyPI when a release is created
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
        
      - name: Set up Python
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install build tools
        if: ${{ steps.release.outputs.release_created }}
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          
      - name: Build package
        if: ${{ steps.release.outputs.release_created }}
        run: python -m build
        
      # Uncomment to publish to PyPI
      # - name: Publish to PyPI
      #   if: ${{ steps.release.outputs.release_created }}
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      #   run: twine upload dist/*
